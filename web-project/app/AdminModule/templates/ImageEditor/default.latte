{block content}

<div id="wrapper">
    
    {include ../navbar.latte}
    
    <div class="container-fluid">
        <div class="row">
            <a href="javascript:history.go(-1);"> 
                <h2><span class="glyphicon glyphicon-chevron-left pull-left"></span>
                    Editor obrázků <small>{$inputFile}</small>
                </h2>
            </a>
                
            <hr>
            
            <div id="plane">
                <img src="{$basePath}/{$inputFile}" id="caman"  class="center-block"/>
            </div>
            
            <br>
            
            <div class="panel panel-default">
                <div class="panel-heading">Nástroje</div>
                <div class="panel-body">
                    
                    <div class="form-group">
                        
                        <div class="row">
                            <!-- kontrast -->
                            <label class="col-md-1 control-label text-right" for="contrast">kontrast</label>  
                            <div class="col-md-3">
                                <input class="reset" id="contrast" name="contrast" type="range" min="-100" max="100" step="1" value="0">
                            </div>

                            <!-- jas -->
                            <label class="col-md-1 control-label text-right" for="brightness">jas</label>  
                            <div class="col-md-3">
                                <input class="reset" id="brightness" name="brightness" type="range" min="-100" max="100" step="1" value="0">
                            </div>

                            <!-- sytost -->
                            <label class="col-md-1 control-label text-right" for="saturation">sytost</label>  
                            <div class="col-md-3">
                                <input class="reset" id="saturation" name="saturation" type="range" min="-100" max="100" step="1" value="0">
                            </div>
                        </div>
                        
                        <br>
                        
                        <div class="row">
                            <!-- živost -->
                            <label class="col-md-1 control-label text-right" for="vibrance">živost</label>  
                            <div class="col-md-3">
                                <input class="reset" id="vibrance" name="vibrance" type="range" min="-100" max="100" step="1" value="0">
                            </div>
                            
                            <!-- expozice -->
                            <label class="col-md-1 control-label text-right" for="exposure">expozice</label>  
                            <div class="col-md-3">
                                <input class="reset" id="exposure" name="exposure" type="range" min="-100" max="100" step="1" value="0">
                            </div>
                            
                            <!-- hue -->
                            <label class="col-md-1 control-label text-right" for="hue">HUE</label>  
                            <div class="col-md-3">
                                <input class="reset" id="hue" name="hue" type="range" min="0" max="100" step="1" value="0">
                            </div>
                        </div>
                        
                        <br>
                        
                        <div class="row">
                            <!-- sépie -->
                            <label class="col-md-1 control-label text-right" for="sepia">sépie</label>  
                            <div class="col-md-3">
                                <input class="reset" id="sepia" name="sepia" type="range" min="-0" max="100" step="1" value="0">
                            </div>
                            
                            <!-- gamma -->
                            <label class="col-md-1 control-label text-right" for="gamma">gamma</label>  
                            <div class="col-md-3">
                                <input class="reset" id="gamma" name="gamma" type="range" min="1" max="10" step="0.1" value="0">
                            </div>
                            
                            <!-- šum -->
                            <label class="col-md-1 control-label text-right" for="noise">šum</label>  
                            <div class="col-md-3">
                                <input class="reset" id="noise" name="noise" type="range" min="0" max="100" step="1" value="0">
                            </div>
                        </div>
                        
                        <br>
                        
                        <div class="row">
                            <!-- zostřit -->
                            <label class="col-md-1 control-label text-right" for="sharpen">zostřit</label>  
                            <div class="col-md-3">
                                <input class="reset" id="sharpen" name="sharpen" type="range" min="0" max="100" step="1" value="0">
                            </div>
                            
                            <!-- rozmazat -->
                            <label class="col-md-1 control-label text-right" for="stackBlur">rozmazat</label>  
                            <div class="col-md-3">
                                <input class="reset" id="stackBlur" name="stackBlur" type="range" min="1" max="40" step="1" value="0">
                            </div>
                           
                        </div>
                        
                        <hr>
                        <p>pravým kliknutím vyresetuješ posuvník</p>
                        <a id="doneButton" class="hidden btn btn-success btn pull-right" style="margin-top: -35px">hotovo</a>
                    </div>
                    
                </div>
            </div>
            
        </div>
    </div>
</div>
{/block}

{block pageScripts}
<script type="text/javascript" src="{$basePath}/admin_components/bower_components/caman/dist/caman.full.min.js"></script>


<script>  
    
    $('.reset').bind("contextmenu",function(e){
        e.preventDefault();
        $(this).val(0);
        processImage();
     }); 

    $('#contrast').on("change", function() {       
        processImage();
    });
    
    $('#brightness').on("change", function() {       
        processImage();
    });
    
    $('#saturation').on("change", function() {       
        processImage();
    });
    
    $('#vibrance').on("change", function() {       
        processImage();
    });
    
    $('#exposure').on("change", function() {       
        processImage();
    });
    
    $('#hue').on("change", function() {       
        processImage();
    });
    
    $('#sepia').on("change", function() {       
        processImage();
    });
    
    $('#gamma').on("change", function() {       
        processImage();
    });
    
    $('#noise').on("change", function() {       
        processImage();
    });
    
    $('#sharpen').on("change", function() {       
        processImage();
    });
    
    $('#stackBlur').on("change", function() {       
        processImage();
    });
    
    function processImage() {
        $('#caman').remove();
        $('#plane').append('<img src="{$basePath|noescape}/{$inputFile|noescape}" id="caman"  class="center-block"/>');
        
        Caman("#caman", function () {
            this.contrast(($('#contrast').val() / 10) * 3);
            this.brightness(($('#brightness').val() / 10) * 3);
            this.saturation($('#saturation').val());
            this.vibrance($('#vibrance').val() * 10);
            this.exposure($('#exposure').val());
            this.hue($('#hue').val());
            this.gamma($('#gamma').val());
            this.noise($('#noise').val());
            this.sepia($('#sepia').val());
            this.sharpen($('#sharpen').val());
            this.stackBlur($('#stackBlur').val());
            
            this.render();
        });
    }
    
    function dataURItoBlob(dataURI) {
        // convert base64/URLEncoded data component to raw binary data held in a string
        var byteString;
        if (dataURI.split(',')[0].indexOf('base64') >= 0)
            byteString = atob(dataURI.split(',')[1]);
        else
            byteString = unescape(dataURI.split(',')[1]);

        // separate out the mime component
        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];

        // write the bytes of the string to a typed array
        var ia = new Uint8Array(byteString.length);
        for (var i = 0; i < byteString.length; i++) {
            ia[i] = byteString.charCodeAt(i);
        }

        return new Blob([ia], { type:mimeString} );
    }
    
    function uploadImage() {
        // Generate the image data
        var pic = document.getElementById("caman").toDataURL("image/png");
        pic = pic.replace(/^data:image\/(png|jpg);base64,/, "")

        // Sending the image data to Server
        $.ajax({
            type: 'POST',
            url: '',
            data: '{ "imageData" : "' + pic + '" }',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (msg) {
                alert("Done, Picture Uploaded.");
            }
        });
    }
    
    $('#doneButton').on('click', function() {
        uploadImage();
    });
</script>

{/block}