<script>
    
    var player;

    $('document').ready(function() {
        
        $('#share-fb').click(function() {
           shareToFB(); 
        });
        
        $('#share-google-plus').click(function() {
           shareToGooglePlus(); 
        });
        
        $('#share-link').click(function() {
           shareLink({_frontend.basic.share}); 
        });
        
        $('#video-time').click(function() {
            player.pause();
            $(this).select();
        });

        $('#playerTags a').tagcloud({
            size: {
                start: 12,
                end: 25,
                unit: 'px'
            },
            color: {
                start: "#444444",
                end: "#206ff2"
            }
        });
        
        var video = videojs('video', {
                plugins: {
                    videoJsResolutionSwitcher: {
                        
                    },
                    {if isset($video['ass'])}
                        ass: {
                            src: '{$basePath|noescape}/{$video['ass']|noescape}',
                            rate: 1
                        }
                    {/if}
                }
            }).ready(function(){
            player = this;

            var hash = window.location.hash.replace('#&', '').replace('#t=', '').replace('#', '');
            if (hash !== 0 && hash !== '' && hash !== undefined && hash !== null && hash != 'autoplay') {
                player.currentTime(hash);
            } else {
                getSavedVideoTime(function(time) {
                    player.currentTime(time);
                });
            }

            player.on('pause', function() {
                saveVideoTime(player.currentTime());
                savePlayerVolume(player.volume().toString().substr(0,5));
            });
            
            player.on('play', function() {
                saveVideoTime(player.currentTime());
                savePlayerVolume(player.volume().toString().substr(0,5));
            });
                
            if (getSavedPlayerVolume() !== undefined) {
                player.volume(getSavedPlayerVolume());
            }
            
            if (window.location.hash === "#autoplay") {
                player.play();
                window.location.hash = "&";
            }
            
            player.currentResolution('original');
            
        });

        setInterval(function() {
            saveVideoTime(player.currentTime());
            savePlayerVolume(player.volume().toString().substr(0,5));
        }, 10 * 1000);

        setInterval(function() {
            updateShareInTime(player);
        }, 1000);

        $(window).unload(function(){
            saveVideoTime(player.currentTime());
            savePlayerVolume(player.volume().toString().substr(0,5));
        });
        
        
    });

    $(document).ready(function() {
       adjustSimilarVideosPane();

       $(window).resize(function() {
           adjustSimilarVideosPane();
       });
    });
    
    function videoJSAddCustomButton(player, videojs, name, callback) {
        var videoJsButtonClass = videojs.getComponent('Button');
        var concreteButtonClass = videojs.extend(videoJsButtonClass, {

          // The `init()` method will also work for constructor logic here, but it is 
          // deprecated. If you provide an `init()` method, it will override the
          // `constructor()` method!
          constructor: function() {
            videoJsButtonClass.call(this, player);
          }, // notice the comma

          handleClick: function(){
            callback();
          }
        });

        var concreteButtonInstance = player.controlBar.addChild(new concreteButtonClass());
            concreteButtonInstance.addClass("vjs-" + name);
    }

    function saveVideoTime(time) {
        {if $user->isLoggedIn()}
            $.ajax({
                type: "POST",
                data: {
                    time: time,
                    token: {$frontUser['fromDB']['token']}
                },
                url: "/api/v2/video/" + {$videoRaw['hash']} + "/save-time/"
            }).success(function(response) {
                if (response.status == "ok") {
                    console.log("saved video time: " + time);
                } else {
                    console.log("saving video time: " + response.status);
                }
            });
        {/if}
    }

    function getSavedVideoTime(callback) {
        {if $user->isLoggedIn()}
            $.ajax({
                type: "POST",
                data: {
                    token: {$frontUser['fromDB']['token']}
                },
                url: "/api/v2/video/" + {$videoRaw['hash']} + "/get-time/"
            }).success(function(response) {
                if (response.status == "ok") {
                    callback(response.status.time);
                } else {
                    console.log("error getting video time: " + response.status);
                }
            });
        {/if}
    }

    function savePlayerVolume(volume) {
        console.log('saving player volume: ' + volume);
        setCookie('player_volume', volume);
    }

    function getSavedPlayerVolume() {
        return getCookie('player_volume');
    }

    function adjustSimilarVideosPane() {
        $('.similar-videos').height($('#video').height() - $('#similarVideosHeader').outerHeight());
    }
    
    function updateShareInTime() {
        var input = $('#video-time');
        var url = location.href.replace(location.hash,"") + "#t=" + parseInt(player.currentTime());
        
        if (input.val() === '' || !player.paused()) {
            input.val(url);
        }
    }
 

</script>